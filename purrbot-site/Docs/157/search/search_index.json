{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 Welcome to the PurrBot Documentation! These pages cover various things for the API, the Bot and some other stuff. Want to help improve those pages? Awesome! Just check out the Contributing Section for how you can do this. API \u00b6 Documentation about the various APIs available under the domain purrbot.site API Documentation Wiki \u00b6 General wiki about the Bot *Purr*, her commands and various other information. Bot Wiki Contributing \u00b6 Pages about how to contribute towards the documentation, bot and the APIs. Also contains information about how formatting works in these documentations. Contributing Guide Credits \u00b6 See what Software is behind both the bot and this documentation. Credits Page Legal \u00b6 All the legal details about the Bot, API and website. Legal Page Other links \u00b6 Social Discord GitHub Twitter YouTube Donate Patreon (Continued donations) PayPal (Single donation)","title":"Welcome"},{"location":"#welcome","text":"Welcome to the PurrBot Documentation! These pages cover various things for the API, the Bot and some other stuff. Want to help improve those pages? Awesome! Just check out the Contributing Section for how you can do this.","title":"Welcome"},{"location":"#api","text":"Documentation about the various APIs available under the domain purrbot.site API Documentation","title":"API"},{"location":"#wiki","text":"General wiki about the Bot *Purr*, her commands and various other information. Bot Wiki","title":"Wiki"},{"location":"#contributing","text":"Pages about how to contribute towards the documentation, bot and the APIs. Also contains information about how formatting works in these documentations. Contributing Guide","title":"Contributing"},{"location":"#credits","text":"See what Software is behind both the bot and this documentation. Credits Page","title":"Credits"},{"location":"#legal","text":"All the legal details about the Bot, API and website. Legal Page","title":"Legal"},{"location":"#other-links","text":"Social Discord GitHub Twitter YouTube Donate Patreon (Continued donations) PayPal (Single donation)","title":"Other links"},{"location":"api/","text":"API Documentation \u00b6 The ImageAPI was created as a replacement for your common Image APIs such as nekos.life. Endpoints are available to use without any authentication required. The Source code is publicly available and contributions are always welcome. Base URL https://purrbot.site/api Categories \u00b6 Safe for Work (SFW) Endpoints Not Safe for Work (NSFW) Endpoints Safe for Work (SFW) Endpoints \u00b6 /quote Generates an image that mimics a Discord message. Request Type application/json Note You must provide an empty JSON body ( {} ) if you want to use the default values. Body Name Type Default Notes avatar String (URL) https://purrbot.site/assets/img/api/unknown.png dateFormat String dd. MMM yyyy Uses SimpleDateFormat message String This is an example message. nameColor String hex:ffffff Supported: rgb:r,g,b , hex:rrggbb timestamp Integer Current time username String Someone Example { \"avatar\" : \"https://cdn.discordapp.com/avatars/204232208049766400/dfaaefa54a2804addb1f494da7aa904d.png\" , \"dateFormat\" : \"dd. MMM yyyy\" , \"message\" : \"This is an example message.\" , \"nameColor\" : \"hex:ffffff\" , \"timestamp\" : 1583708400 , \"username\" : \"Andre_601\" } Response 200 Type image/png 400 Type application/json Body Example { \"details\" : { \"path\" : \"/api/quote\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"Received invalid or empty JSON Body.\" } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 500 Type application/json Body Example { \"details\" : { \"path\" : \"/api/quote\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"Couldn't generate Image. Make sure the values are valid!\" } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /status Generates an image that displays an avatar with a Status icon. Request Type: application/json Body Name Type Default Notes avatar String (URL) https://purrbot.site/assets/img/api/unknown.png mobile Boolean false Changes the icon to a phone. Not used with status offline . status String offline Supported: online , idle , do_not_disturb / dnd or offline Example { \"avatar\" : \"https://cdn.discordapp.com/avatars/204232208049766400/dfaaefa54a2804addb1f494da7aa904d.png\" , \"mobile\" : false , \"status\" : \"online\" } Response 200 Type image/png 400 Type application/json Body Example { \"details\" : { \"path\" : \"/api/status\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"Received invalid or empty JSON Body.\" } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 500 Type application/json Body Example { \"details\" : { \"path\" : \"/api/status\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"Couldn't generate Image. Make sure the values are valid!\" } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/background/img Returns a randomly selected Welcome Background Image. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/background/img/color_black.png\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/bite/gif Returns a randomly selected Bite Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/bite/gif/bite_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/blush/gif Returns a randomly selected Blush Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/blush/gif/blush_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/comfy/gif Returns a randomly selected Comfy Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/comfy/gif/comfy_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/cry/gif Returns a randomly selected Cry Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/cry/gif/cry_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/cuddle/gif Returns a randomly selected Cuddle Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/cuddle/gif/cuddle_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/dance/gif Returns a randomly selected Dance Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/dance/gif/dance_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/eevee/{type} Returns a randomly selected Eevee Image/Gif. Parameters Name Description type The Image type to return. Supported: gif or img . Response 200 Type application/json Body Example Gif { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/eevee/gif/eevee_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. Example Image { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/eevee/img/eevee_001.jpg\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/feed/gif Returns a randomly selected Feeding Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/feed/gif/feed_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/fluff/gif Returns a randomly selected Blush Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/fluff/gif/fluff_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/holo/img Returns a randomly selected Image of Holo from 'Spice and Wolf' Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/holo/img/holo_001.jpg\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/hug/gif Returns a randomly selected hugging Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/hug/gif/hug_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/icon/img Returns a randomly selected Welcome Icon. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/icon/img/holo.jpg\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/kiss/gif Returns a randomly selected kissing Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/kiss/gif/kiss_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/kitsune/img Returns a randomly selected Kitsune (Fox Girl) Image. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/kitsune/img/kitsune_001.jpg\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/lick/gif Returns a randomly selected licking Gif Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/lick/gif/lick_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/neko/{type} Returns a randomly selected Neko (Cat Girl) Gif or Image. Parameters Name Description type The Image type to return. Supported: gif or img . Response 200 Type application/json Body Example Gif { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/neko/gif/neko_001.gif\" , \"time\" : 0 } Example Image { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/neko/img/neko_001.jpg\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/okami/img Returns a randomly selected Okami (Wolf Girl) Image. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/okami/img/okami_001.jpg\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/pat/gif Returns a randomly selected patting Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/pat/gif/pat_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/poke/gif Returns a randomly selected poking Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/poke/gif/poke_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/senko/img Returns a randomly selected Image of Senko-San. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/senko/img/senko_001.jpg\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/slap/gif Returns a randomly selected slapping Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/slap/gif/slap_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/smile/gif Returns a randomly selected smiling Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/smile/gif/smile_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/tail/gif Returns a randomly selected tail wagging Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/tail/gif/tail_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/sfw/tickle/gif Returns a randomly selected tickling Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/sfw/tickle/gif/tickle_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /list/sfw/{path} Lists all found images of the specified {path} Parameters Name Description path The path to the image folder. Available paths are the same as with all the /api/img/ endpoints. Response 200 Type application/json Body Example { \"error\" : false , \"links\" : [ \"https://purrbot.site/img/sfw/background/img/color_black.png\" , \"https://purrbot.site/img/sfw/background/img/color_blue.png\" , \"https://purrbot.site/img/sfw/background/img/color_blurple.png\" , \"https://purrbot.site/img/sfw/background/img/color_green.png\" , \"https://purrbot.site/img/sfw/background/img/color_grey.png\" , \"https://purrbot.site/img/sfw/background/img/color_red.png\" , \"https://purrbot.site/img/sfw/background/img/color_white.png\" , \"https://purrbot.site/img/sfw/background/img/gradient.png\" , \"https://purrbot.site/img/sfw/background/img/gradient_blue.png\" , \"https://purrbot.site/img/sfw/background/img/gradient_dark_red.png\" , \"https://purrbot.site/img/sfw/background/img/gradient_green.png\" , \"https://purrbot.site/img/sfw/background/img/gradient_orange.png\" , \"https://purrbot.site/img/sfw/background/img/gradient_red.png\" , \"https://purrbot.site/img/sfw/background/img/rainbow.png\" ], \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. links : Array Array of Strings representing URLs to the Images/Gifs found in the directory. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. Not Safe for Work (NSFW) Endpoints \u00b6 /img/nsfw/anal/gif Returns a randomly selected Anal-Sex Gif Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/anal/gif/anal_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/nsfw/blowjob/gif Returns a randomly selected blowjob Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/blowjob/gif/blowjob_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/nsfw/cum/gif Returns a randomly selected cumming Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/cum/gif/cum_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/nsfw/fuck/gif Returns a randomly selected Sex Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/fuck/gif/fuck_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/nsfw/neko/{type} Returns a randomly selected NSFW Neko (Cat Girl) Gif or Image. Parameters Name Description type The Image type to return. Supported: gif or img Response 200 Type application/json Body Example Gif { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/neko/gif/neko_001.gif\" , \"time\" : 0 } Example Image { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/neko/img/neko_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/nsfw/pussylick/gif Returns a randomly selected pussy licking Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/pussylick/gif/pussylick_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/nsfw/solo/gif Returns a randomly selected Gif of a female masturbating. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/solo/gif/solo_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/nsfw/threesome_fff/gif Returns a randomly selected Threesome Gif (Females only). Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/threesome_fff/gif/threesome_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/nsfw/threesome_ffm/gif Returns a randomly selected Threesome Gif (2 Females, 1 Male). Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/threesome_ffm/gif/threesome_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/nsfw/threesome_mmf/gif Returns a randomly selected Threesome Gif (1 Female, 2 Males). Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/threesome_mmf/gif/threesome_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/nsfw/yaoi/gif Returns a randomly selected Yaoi (Gay Hentai) Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/yaoi/gif/yaoi_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /img/nsfw/yuri/gif Returns a randomly selected Yuri (Lesbian Hentai) Gif. Response 200 Type application/json Body Example { \"error\" : false , \"link\" : \"https://purrbot.site/img/nsfw/yuri/gif/yuri_001.gif\" , \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. link : String (URL) URL to the randomly selected Image/Gif. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. /list/nsfw/{path} Lists all found images of the specified {path} Parameters Name Description path The path to the image folder. Available paths are the same as with all the /api/img/ endpoints. Response 200 Type application/json Body Example { \"error\" : false , \"links\" : [ \"https://purrbot.site/img/nsfw/anal/gif/anal_001.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_002.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_003.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_004.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_005.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_006.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_007.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_008.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_009.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_010.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_011.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_012.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_013.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_014.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_015.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_016.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_017.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_018.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_019.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_020.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_021.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_022.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_023.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_024.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_025.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_026.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_027.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_028.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_029.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_030.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_031.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_032.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_033.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_034.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_035.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_036.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_037.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_038.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_039.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_040.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_041.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_042.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_043.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_044.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_045.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_046.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_047.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_048.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_049.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_050.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_051.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_052.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_053.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_054.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_055.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_056.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_057.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_058.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_059.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_060.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_061.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_062.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_063.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_064.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_065.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_066.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_067.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_068.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_069.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_070.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_071.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_072.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_073.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_074.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_075.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_076.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_077.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_078.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_079.gif\" , \"https://purrbot.site/img/nsfw/anal/gif/anal_080.gif\" \"time\" : 0 } Scheme error : Boolean Always returns false for successful requests. links : Array Array of Strings representing URLs to the Images/Gifs found in the directory. time : Integer Time in milliseconds it took for the API to process the request. 403 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path is not valid.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request. 404 Type application/json Body Example { \"details\" : { \"path\" : \"/api/img/:path\" , \"content-type\" : \":your-content-type\" , \"user-agent\" : \":your-user-agent\" }, \"error\" : true , \"message\" : \"The provided path does not contain any images.\" , \"time\" : 0 } Schema details : JSON Object Contains details about your request. path : String The path you accessed. content-type : String The content-type you provided in your request. user-agent : String The User-Agent you used in your request. error : Boolean Always returns true for errors. message : String The reason why the request failed. time : Integer Time in milliseconds it took for the API to process the request.","title":"API"},{"location":"api/#api-documentation","text":"The ImageAPI was created as a replacement for your common Image APIs such as nekos.life. Endpoints are available to use without any authentication required. The Source code is publicly available and contributions are always welcome. Base URL https://purrbot.site/api","title":"API Documentation"},{"location":"api/#categories","text":"Safe for Work (SFW) Endpoints Not Safe for Work (NSFW) Endpoints","title":"Categories"},{"location":"api/#sfw-endpoints","text":"/quote Generates an image that mimics a Discord message.","title":"Safe for Work (SFW) Endpoints"},{"location":"api/#nsfw-endpoints","text":"/img/nsfw/anal/gif Returns a randomly selected Anal-Sex Gif","title":"Not Safe for Work (NSFW) Endpoints"},{"location":"bot/","text":"*Purr* is a simple bot, which is focused around nekos (catgirls) but also provides other fun commands. Commands \u00b6 Commands Fun Guild Info NSFW Setup \u00b6 Setup a welcome channel Welcome Images Backgrounds Icons Misc \u00b6 Credits FAQ Selfhosting","title":"Wiki"},{"location":"bot/#commands","text":"Commands Fun Guild Info NSFW","title":" Commands"},{"location":"bot/#setup","text":"Setup a welcome channel Welcome Images Backgrounds Icons","title":" Setup"},{"location":"bot/#misc","text":"Credits FAQ Selfhosting","title":" Misc"},{"location":"bot/commands/","text":"Commands \u00b6 This page lists all available commands of the bot. The commands are offered through Discord's Slash commands feature, meaning they all are prefixed with / Important Permission means Discord permissions which the executor of the command (you) requires. To make the bot work properly will it require the following permissions: Read Messages Send Messages Embed Links Read Message History Add Reactions Use External Emojis Additional permissions required for a command will be mentioned under Bot Requires <argument> are required and [argument] are optional. Fun \u00b6 Bite Blush Cry Cuddle Dance Feed Fluff Hug Img Kiss Lick Pat Poke Ship Slap Smile Tickle Wag Guild \u00b6 Language Welcome Info \u00b6 Donate Info Invite Ping Purrhelp Serverinfo Shards Stats User NSFW \u00b6 Blowjob Cum Fuck Lewdneko Pussylick Sologirl Threesome Fun \u00b6 Bite \u00b6 Permission : None Bot requires : None Usage : /bite <User: user> [User: user2] [User: user3] Lets you bite up to 3 users. Blush \u00b6 Permission : None Bot requires : None Usage : /blush Makes you blush. >////\\< Cry \u00b6 Permission : None Bot requires : None Usage : /cry Makes you cry. Cuddle \u00b6 Permission : None Bot requires : None Usage : /cuddle <User: user> [User: user2] [User: user3] Lets you cuddle up to 3 user. Dance \u00b6 Permission : None Bot requires : None Usage : /dance Makes you dance. ~(^-^)~ Feed \u00b6 Permission : None Bot requires : None Usage : /feed <User: user> Allows you to give another user some food. The asked user can accept or deny the request. Fluff \u00b6 Permission : None Bot requires : None Usage : /fluff <User: user> Allows you to fluff the tail of another user. The asked user can accept or deny the request. Hug \u00b6 Permission : None Bot requires : None Usage : /hug <User: user> [User: user2] [User: user3] Lets you hug up to 3 user. Img \u00b6 Permission : None Bot requires : None Usages : /img eevee [Boolean: gif] /img holo /img kitsune /img neko [Boolean: gif] /img okami /img senko Gives you an image (or gif if available) of an Eevee, Holo from \"Spice and Wolf\", a kitsune (Fox girl), a neko (Cat girl), a okami (Wolf girl) or Senko-San from \"Sewayaki Kitsune no Senko-San\". Kiss \u00b6 Permission : None Bot requires : None Usage : /kiss <User: user> [User: user2] [User: user3] Lets you kiss up to 3 user. Lick \u00b6 Permission : None Bot requires : None Aliases : None Usage : /lick <User: user> [User: user2] [User: user3] Lets you lick up to 3 user. Pat \u00b6 Permission : None Bot requires : None Usage : /pat <User: user> [User: user2] [User: user3] Lets you pat up to 3 user. Poke \u00b6 Permission : None Bot requires : None Usage : /poke <User: user> [User: user2] [User: user3] Lets you poke up to 3 user. Ship \u00b6 Permission : None Bot requires : Attach files (optional for showing a image) Usage : /ship <User: user> [User: user2] Will ship you with the provided user. If a second user is provided will it ship those two instead. Slap \u00b6 Permission : None Bot requires : None Usage : /slap <User: user> [User: user2] [User: user3] Lets you slap up to 3 user. Smile \u00b6 Permission : None Bot requires : None Usage : /smile Makes you Smile. :) Tickle \u00b6 Permission : None Bot requires : None Usage : /tickle <User: user> [User: user2] [User: user3] Lets you tickle up to 3 user. Wag \u00b6 Permission : None Bot requires : None Usage : /wag Makes you wag your tail. Guild \u00b6 Language \u00b6 Permission : Manage Server Bot requires : None Usage : /language list /language reset /language set <String: language> Sets the language used by the bot for the Discord Server. Use /language list to list all available languages and set one using /language set <String: language> . Resset using /language reset . All translations are community-made and can be found under https://lang.purrbot.site . Welcome \u00b6 Permission : Manage server Bot requires : Attach files (Used for welcome-images. See Welcome images for examples) Usage : /welcome background <String: background> /welcome channel <TextChannel: channel> /welcome color <String: color /welcome icon <String: icon> /welcome info /welcome message <String: message> /welcome reset <Choice: all|background|channel|color|icon|message> /welcome test Lets you configure *Purr*'s welcome-system. Arguments background <String: background> Sets the Welcome background to use. As a Server booster will you have access to the booster background and as a Tier 2 or Tier 3 Patreon can you set any Image you like through a URL. channel <TextChannel: channel> Sets the TextChannel that should be used for the welcome messages. Please make sure the bot has sufficient permissions in the selected channel. color <String: color> Sets the text colot used in the image. Supported formats are hex:rrggbb (i.e. hex:ffffff ), rgb:r,g,b (i.e. rgb:255,255,255 ) and random . icon <String: icon> Sets the welcome icon to use. As a Server booster will you have access to the booster icon and as a Tier 2 or Tier 3 Patreon can you set any image you like through a URL. info Shows the current settings of the welcome-system and also gives a preview of the image used. message <String: message> Sets the message to use alongside the images. You can use placeholders (Listed below) for more customization. reset <Choice: all|background|channel|color|icon|message> Reset either all or parts of the welcome-system to their default values. test Creates a message with image similar to what will be used for joining users. Placeholders The following placeholders can be used in the welcome message to display different values. {count} / {members} Displays the current amount of members on the Discord (i.e. 1000 ). {count_formatted} / {members_formatted} Displays the current amount of members on the Discord in a formatted way (i.e. 1,000 ). {guild} / {server} Displays the name of the Discord. {mention} Mentions the joining Member. {name} / {username} Displays the name of the joining Member. {c_mention:<id>} Displays a channel as mention. <id> has to be the ID of the Text Channel (Other channel types won't work). {c_name:<id>} Displays a channel's name. <id> has to be the ID of the channel. {r_mention:<id>} Displays a role as mention. <id> has to be the ID of the role. {r_name:<id>} Displays a role's name. <id> has to be the ID of the role. {tag} Displays the tag (Username and discriminator) of the user. Info \u00b6 Donate \u00b6 Permission : None Bot requires : None Usage : /donate Shows information on how you can donate. Also lists all current Server booster and donators . Info \u00b6 Permission : None Bot requires : None Usage : /info [Boolean: dm] Gives information about the bot. If you provided true as argument will the info be send to your Direct Messages. Invite \u00b6 Permission : None Bot requires : None Usage : /invite [Boolean: dm] Gives you an invite for the bot and to the support server. If you provided true as argument will the invite be send to your Direct Messages. Ping \u00b6 Permission : None Bot requires : None Usage : /ping Returns the delay of editing the message, the delay to the API and the WebSocket delay in milliseconds. Purrhelp \u00b6 Permission : None Bot requires : None Usage : /purrhelp Gives a link to this page here. Serverinfo \u00b6 Permission : None Bot requires : None Usage : /serverinfo Provides basic information about the server you're on. Shards \u00b6 Permission : None Bot requires : None Usage : /shards Lists all shards, their status, ping and Guild count. Stats \u00b6 Permission : None Bot requires : None Usage : /stats Shows statistics of the bot. User \u00b6 Permission : None Bot requires : None Usage : /user [User: user] Shows information about a user. If you provided another user will information about them be shown instead. NSFW \u00b6 Blowjob \u00b6 Permission : None Bot requires : None Usage : /blowjob <User: user> This command can only be run in NSFW-labeled channels! Allows you to give another user a blowjob. The asked user can accept or deny the request. Cum \u00b6 Permission : None Bot requires : None Usage : /cum This command can only be run in NSFW-labeled channels! Returns a random gif of someone cumming. Fuck \u00b6 Permission : None Bot requires : None Usage : /fuck <User: user> [Choice: anal|normal|yaoi|yuri] This command can only be run in NSFW-labeled channels! Allows you to have sex with another user. The asked user can accept or deny the request. If no second argument is given can the asked user select the type, otherwise they can only accept or deny the request. Lewdneko \u00b6 Permission : None Bot requires : None Usage : /lewdneko [Boolean: gif] This command can only be run in NSFW-labeled channels! Gives an image or gif of a lewd Neko. Pussylick \u00b6 Permission : None Bot requires : None Usage : /pussylick <User: user> This command can only be run in NSFW-Labeled channels! Allows you to lick the pussy of another user. The asked user can accept or deny the request. Sologirl \u00b6 Permission : None Bot requires : None Usage : /sologirl This command can only be run in NSFW-labeled channels! Gives a gif of a girl \"playing\" with herself. Threesome \u00b6 Permission : None Bot requires : None Usage : /threesome <User: user> <User: user2> [Choice: fff|ffm|mmf] This command can only be run in NSFW-labeled channels! Allows you to have sex with 2 users. The asked users can accept or deny the request. If only one denies the request will it be denied as a whole. If no 3rd argument is given will ffm (2 females, 1 male) be used, otherwise can fff (3 females, 0 males) or mmf (1 female, 2 males) be used.","title":"Commands"},{"location":"bot/commands/#commands","text":"This page lists all available commands of the bot. The commands are offered through Discord's Slash commands feature, meaning they all are prefixed with / Important Permission means Discord permissions which the executor of the command (you) requires. To make the bot work properly will it require the following permissions: Read Messages Send Messages Embed Links Read Message History Add Reactions Use External Emojis Additional permissions required for a command will be mentioned under Bot Requires <argument> are required and [argument] are optional.","title":"Commands"},{"location":"bot/commands/#fun","text":"Bite Blush Cry Cuddle Dance Feed Fluff Hug Img Kiss Lick Pat Poke Ship Slap Smile Tickle Wag","title":"Fun"},{"location":"bot/commands/#guild","text":"Language Welcome","title":"Guild"},{"location":"bot/commands/#info","text":"Donate Info Invite Ping Purrhelp Serverinfo Shards Stats User","title":"Info"},{"location":"bot/commands/#nsfw","text":"Blowjob Cum Fuck Lewdneko Pussylick Sologirl Threesome","title":"NSFW"},{"location":"bot/commands/#category-fun","text":"","title":"Fun"},{"location":"bot/commands/#bite","text":"Permission : None Bot requires : None Usage : /bite <User: user> [User: user2] [User: user3] Lets you bite up to 3 users.","title":"Bite"},{"location":"bot/commands/#blush","text":"Permission : None Bot requires : None Usage : /blush Makes you blush. >////\\<","title":"Blush"},{"location":"bot/commands/#cry","text":"Permission : None Bot requires : None Usage : /cry Makes you cry.","title":"Cry"},{"location":"bot/commands/#cuddle","text":"Permission : None Bot requires : None Usage : /cuddle <User: user> [User: user2] [User: user3] Lets you cuddle up to 3 user.","title":"Cuddle"},{"location":"bot/commands/#dance","text":"Permission : None Bot requires : None Usage : /dance Makes you dance. ~(^-^)~","title":"Dance"},{"location":"bot/commands/#feed","text":"Permission : None Bot requires : None Usage : /feed <User: user> Allows you to give another user some food. The asked user can accept or deny the request.","title":"Feed"},{"location":"bot/commands/#fluff","text":"Permission : None Bot requires : None Usage : /fluff <User: user> Allows you to fluff the tail of another user. The asked user can accept or deny the request.","title":"Fluff"},{"location":"bot/commands/#hug","text":"Permission : None Bot requires : None Usage : /hug <User: user> [User: user2] [User: user3] Lets you hug up to 3 user.","title":"Hug"},{"location":"bot/commands/#img","text":"Permission : None Bot requires : None Usages : /img eevee [Boolean: gif] /img holo /img kitsune /img neko [Boolean: gif] /img okami /img senko Gives you an image (or gif if available) of an Eevee, Holo from \"Spice and Wolf\", a kitsune (Fox girl), a neko (Cat girl), a okami (Wolf girl) or Senko-San from \"Sewayaki Kitsune no Senko-San\".","title":"Img"},{"location":"bot/commands/#kiss","text":"Permission : None Bot requires : None Usage : /kiss <User: user> [User: user2] [User: user3] Lets you kiss up to 3 user.","title":"Kiss"},{"location":"bot/commands/#lick","text":"Permission : None Bot requires : None Aliases : None Usage : /lick <User: user> [User: user2] [User: user3] Lets you lick up to 3 user.","title":"Lick"},{"location":"bot/commands/#pat","text":"Permission : None Bot requires : None Usage : /pat <User: user> [User: user2] [User: user3] Lets you pat up to 3 user.","title":"Pat"},{"location":"bot/commands/#poke","text":"Permission : None Bot requires : None Usage : /poke <User: user> [User: user2] [User: user3] Lets you poke up to 3 user.","title":"Poke"},{"location":"bot/commands/#ship","text":"Permission : None Bot requires : Attach files (optional for showing a image) Usage : /ship <User: user> [User: user2] Will ship you with the provided user. If a second user is provided will it ship those two instead.","title":"Ship"},{"location":"bot/commands/#slap","text":"Permission : None Bot requires : None Usage : /slap <User: user> [User: user2] [User: user3] Lets you slap up to 3 user.","title":"Slap"},{"location":"bot/commands/#smile","text":"Permission : None Bot requires : None Usage : /smile Makes you Smile. :)","title":"Smile"},{"location":"bot/commands/#tickle","text":"Permission : None Bot requires : None Usage : /tickle <User: user> [User: user2] [User: user3] Lets you tickle up to 3 user.","title":"Tickle"},{"location":"bot/commands/#wag","text":"Permission : None Bot requires : None Usage : /wag Makes you wag your tail.","title":"Wag"},{"location":"bot/commands/#category-guild","text":"","title":"Guild"},{"location":"bot/commands/#language","text":"Permission : Manage Server Bot requires : None Usage : /language list /language reset /language set <String: language> Sets the language used by the bot for the Discord Server. Use /language list to list all available languages and set one using /language set <String: language> . Resset using /language reset . All translations are community-made and can be found under https://lang.purrbot.site .","title":"Language"},{"location":"bot/commands/#welcome","text":"Permission : Manage server Bot requires : Attach files (Used for welcome-images. See Welcome images for examples) Usage : /welcome background <String: background> /welcome channel <TextChannel: channel> /welcome color <String: color /welcome icon <String: icon> /welcome info /welcome message <String: message> /welcome reset <Choice: all|background|channel|color|icon|message> /welcome test Lets you configure *Purr*'s welcome-system. Arguments background <String: background> Sets the Welcome background to use. As a Server booster will you have access to the booster background and as a Tier 2 or Tier 3 Patreon can you set any Image you like through a URL. channel <TextChannel: channel> Sets the TextChannel that should be used for the welcome messages. Please make sure the bot has sufficient permissions in the selected channel. color <String: color> Sets the text colot used in the image. Supported formats are hex:rrggbb (i.e. hex:ffffff ), rgb:r,g,b (i.e. rgb:255,255,255 ) and random . icon <String: icon> Sets the welcome icon to use. As a Server booster will you have access to the booster icon and as a Tier 2 or Tier 3 Patreon can you set any image you like through a URL. info Shows the current settings of the welcome-system and also gives a preview of the image used. message <String: message> Sets the message to use alongside the images. You can use placeholders (Listed below) for more customization. reset <Choice: all|background|channel|color|icon|message> Reset either all or parts of the welcome-system to their default values. test Creates a message with image similar to what will be used for joining users. Placeholders The following placeholders can be used in the welcome message to display different values. {count} / {members} Displays the current amount of members on the Discord (i.e. 1000 ). {count_formatted} / {members_formatted} Displays the current amount of members on the Discord in a formatted way (i.e. 1,000 ). {guild} / {server} Displays the name of the Discord. {mention} Mentions the joining Member. {name} / {username} Displays the name of the joining Member. {c_mention:<id>} Displays a channel as mention. <id> has to be the ID of the Text Channel (Other channel types won't work). {c_name:<id>} Displays a channel's name. <id> has to be the ID of the channel. {r_mention:<id>} Displays a role as mention. <id> has to be the ID of the role. {r_name:<id>} Displays a role's name. <id> has to be the ID of the role. {tag} Displays the tag (Username and discriminator) of the user.","title":"Welcome"},{"location":"bot/commands/#category-info","text":"","title":"Info"},{"location":"bot/commands/#donate","text":"Permission : None Bot requires : None Usage : /donate Shows information on how you can donate. Also lists all current Server booster and donators .","title":"Donate"},{"location":"bot/commands/#info_1","text":"Permission : None Bot requires : None Usage : /info [Boolean: dm] Gives information about the bot. If you provided true as argument will the info be send to your Direct Messages.","title":"Info"},{"location":"bot/commands/#invite","text":"Permission : None Bot requires : None Usage : /invite [Boolean: dm] Gives you an invite for the bot and to the support server. If you provided true as argument will the invite be send to your Direct Messages.","title":"Invite"},{"location":"bot/commands/#ping","text":"Permission : None Bot requires : None Usage : /ping Returns the delay of editing the message, the delay to the API and the WebSocket delay in milliseconds.","title":"Ping"},{"location":"bot/commands/#purrhelp","text":"Permission : None Bot requires : None Usage : /purrhelp Gives a link to this page here.","title":"Purrhelp"},{"location":"bot/commands/#serverinfo","text":"Permission : None Bot requires : None Usage : /serverinfo Provides basic information about the server you're on.","title":"Serverinfo"},{"location":"bot/commands/#shards","text":"Permission : None Bot requires : None Usage : /shards Lists all shards, their status, ping and Guild count.","title":"Shards"},{"location":"bot/commands/#stats","text":"Permission : None Bot requires : None Usage : /stats Shows statistics of the bot.","title":"Stats"},{"location":"bot/commands/#user","text":"Permission : None Bot requires : None Usage : /user [User: user] Shows information about a user. If you provided another user will information about them be shown instead.","title":"User"},{"location":"bot/commands/#category-nsfw","text":"","title":"NSFW"},{"location":"bot/commands/#blowjob","text":"Permission : None Bot requires : None Usage : /blowjob <User: user> This command can only be run in NSFW-labeled channels! Allows you to give another user a blowjob. The asked user can accept or deny the request.","title":"Blowjob"},{"location":"bot/commands/#cum","text":"Permission : None Bot requires : None Usage : /cum This command can only be run in NSFW-labeled channels! Returns a random gif of someone cumming.","title":"Cum"},{"location":"bot/commands/#fuck","text":"Permission : None Bot requires : None Usage : /fuck <User: user> [Choice: anal|normal|yaoi|yuri] This command can only be run in NSFW-labeled channels! Allows you to have sex with another user. The asked user can accept or deny the request. If no second argument is given can the asked user select the type, otherwise they can only accept or deny the request.","title":"Fuck"},{"location":"bot/commands/#lewdneko","text":"Permission : None Bot requires : None Usage : /lewdneko [Boolean: gif] This command can only be run in NSFW-labeled channels! Gives an image or gif of a lewd Neko.","title":"Lewdneko"},{"location":"bot/commands/#pussylick","text":"Permission : None Bot requires : None Usage : /pussylick <User: user> This command can only be run in NSFW-Labeled channels! Allows you to lick the pussy of another user. The asked user can accept or deny the request.","title":"Pussylick"},{"location":"bot/commands/#sologirl","text":"Permission : None Bot requires : None Usage : /sologirl This command can only be run in NSFW-labeled channels! Gives a gif of a girl \"playing\" with herself.","title":"Sologirl"},{"location":"bot/commands/#threesome","text":"Permission : None Bot requires : None Usage : /threesome <User: user> <User: user2> [Choice: fff|ffm|mmf] This command can only be run in NSFW-labeled channels! Allows you to have sex with 2 users. The asked users can accept or deny the request. If only one denies the request will it be denied as a whole. If no 3rd argument is given will ffm (2 females, 1 male) be used, otherwise can fff (3 females, 0 males) or mmf (1 female, 2 males) be used.","title":"Threesome"},{"location":"bot/selfhosting/","text":"Some of you may want to selfhost the bot on your own VPS/server. This page explains how you can selfhost the bot for yourself. Important! By selfhosting the bot will you agree to the following terms: You follow the MIT-License of the bot. This means that you give credit to the original author (Andre_601) and won't claim this code as your own. You aknowledge and agree that you won't receive any support for your selfhosted bot. Requirements \u00b6 Before you can run the bot will you need to make sure that the following requirements are met. RethinkDB \u00b6 You need to have RethinkDB installed and running on your server, where the bot will later run. This also includes creating databases and tables to later set in the config.json. Java \u00b6 You need at least Java 11 to be installed and working. Newer versions of Java should work too. Setup \u00b6 When you made sure, that the requirements are met, can you continue with preparing the code. Clone the repository \u00b6 Clone/Fork the PurrBot repository, if you didn't already and open it in your preferred IDE. Make changes to code \u00b6 You need to alter specific parts of the code, to prevent errors from appearing. Alternatively could you set \"beta\" in the config.json to true, to set the bot as Beta-Bot, disabling certain functionalities such as posting stats to Bot Lists. When making changes to the code should you remove or uncomment the following code-snippets in PurrBot.java : PurrBot.java public void startUpdater (){ scheduler . scheduleAtFixedRate (() -> { getShardManager (). setActivity ( Activity . of ( Activity . ActivityType . WATCHING , getMessageUtil (). getBotGame ( getShardManager (). getGuildCache (). size ()) )); if ( isBeta ()) // (1) return ; long guilds = getShardManager (). getGuildCache (). size (); long shards = getShardManager (). getShardCache (). size (); logger . info ( \"Posting Guild Stats to Bot lists...\" ); for ( HttpUtil . BotList botList : HttpUtil . BotList . values ()){ getHttpUtil (). postServerStats ( \"*Purr*\" , \"6875\" , guilds , shards , botList , getFileManager (). getString ( \"config\" , botList . getTokenPath ()) ). whenComplete (( botListResult , ex ) -> { if ( botListResult == null || ! botListResult . isSuccess () || ex != null ){ logger . warn ( \"Error while posting Guild stats to bot list {}!\" , botList . getName ()); if ( botListResult == null ){ logger . warn ( \"BotListResult is null!\" ); return ; } if ( ex != null ){ ex . printStackTrace (); return ; } logger . info ( \"Response Code: {}\" , botListResult . getResponseCode ()); logger . info ( \"Response Message: {}\" , botListResult . getResponseMessage ()); return ; } logger . info ( \"Successfully posted stats to {}!\" , botListResult . getBotList ()); }); } }, 1 , 5 , TimeUnit . MINUTES ); } To disable posting to Bot list, either set the bot into beta mode through the config.json or put everything after this if and before the }, 1, 5, TimeUnit.MINUTES); into comments. You can also update the BotList enum in the HttpUtil,java to post to different bot lists. Update some classes \u00b6 You need to update values in specific classes to make your version work without issues. Namely you have to alter the content of the following classes: IDs.java (Contains various IDs of users or Guilds) Emotes.java (Contains different emotes used in commands) Links.java (Contains various links of the bot) Build jar file \u00b6 When you're done with your changes, make sure to execute gradlew clean shadowJar to build a shaded jar containing all dependnencies required. Config.json \u00b6 The config.json is the core file of the bot in which you set various different information that will be used by the bot. On first startup will it generate with the below default values. Default Config.json { \"bot-token\" : \"TOKEN\" , \"beta\" : false , \"debug\" : false , \"webhooks\" : { \"guild\" : \"guild-webhook-url\" , \"log\" : \"log-webhook-url\" }, \"tokens\" : { \"fluxpoint-dev\" : \"fluxpoint-dev-token\" , \"discord-bots-gg\" : \"dbgg-token\" , \"botlist-space\" : \"botlist-token\" , \"discordextremelist-xyz\" : \"debl-token\" , \"discord-boats\" : \"discord-boats-token\" , \"discordservices-net\" : \"discordservices-net-token\" }, \"database\" : { \"ip\" : \"127.0.0.1\" , \"name\" : \"DatabaseName\" , \"guildTable\" : \"GuildTable\" } } Note that you don't have to set values for every option in the config.json. If you followed the previous step on preparing the bot will you only need to set the following options: Option: Value required: bot-token Valid Bot-token of your Bot-application to login. webhooks.guild A URL to a Discord webhook for logging joins and leaves of the bot. webhooks.log A URL to a Discord webhook for logging dis/reconnects of the bot. tokens.fluxpoint-dev Valid Authentication-token for the image-API of Fluxpoint.dev database.ip Domain/IP of the RethinkDB server. database.name Name of the database you created. database.guildTable Name of the table you created to store guild settings. Other files \u00b6 The bot also has other files, which you can alter to your liking. random.json contains various messages and links used for (often) random responses. data.json contains data such as current guild blacklist, special users and more. Various lang-files used for the different command responses of the bot.","title":"Selfhosting"},{"location":"bot/selfhosting/#requirements","text":"Before you can run the bot will you need to make sure that the following requirements are met.","title":"Requirements"},{"location":"bot/selfhosting/#rethinkdb","text":"You need to have RethinkDB installed and running on your server, where the bot will later run. This also includes creating databases and tables to later set in the config.json.","title":"RethinkDB"},{"location":"bot/selfhosting/#java","text":"You need at least Java 11 to be installed and working. Newer versions of Java should work too.","title":"Java"},{"location":"bot/selfhosting/#setup","text":"When you made sure, that the requirements are met, can you continue with preparing the code.","title":"Setup"},{"location":"bot/selfhosting/#clone-repository","text":"Clone/Fork the PurrBot repository, if you didn't already and open it in your preferred IDE.","title":"Clone the repository"},{"location":"bot/selfhosting/#change-code","text":"You need to alter specific parts of the code, to prevent errors from appearing. Alternatively could you set \"beta\" in the config.json to true, to set the bot as Beta-Bot, disabling certain functionalities such as posting stats to Bot Lists. When making changes to the code should you remove or uncomment the following code-snippets in PurrBot.java : PurrBot.java public void startUpdater (){ scheduler . scheduleAtFixedRate (() -> { getShardManager (). setActivity ( Activity . of ( Activity . ActivityType . WATCHING , getMessageUtil (). getBotGame ( getShardManager (). getGuildCache (). size ()) )); if ( isBeta ()) // (1) return ; long guilds = getShardManager (). getGuildCache (). size (); long shards = getShardManager (). getShardCache (). size (); logger . info ( \"Posting Guild Stats to Bot lists...\" ); for ( HttpUtil . BotList botList : HttpUtil . BotList . values ()){ getHttpUtil (). postServerStats ( \"*Purr*\" , \"6875\" , guilds , shards , botList , getFileManager (). getString ( \"config\" , botList . getTokenPath ()) ). whenComplete (( botListResult , ex ) -> { if ( botListResult == null || ! botListResult . isSuccess () || ex != null ){ logger . warn ( \"Error while posting Guild stats to bot list {}!\" , botList . getName ()); if ( botListResult == null ){ logger . warn ( \"BotListResult is null!\" ); return ; } if ( ex != null ){ ex . printStackTrace (); return ; } logger . info ( \"Response Code: {}\" , botListResult . getResponseCode ()); logger . info ( \"Response Message: {}\" , botListResult . getResponseMessage ()); return ; } logger . info ( \"Successfully posted stats to {}!\" , botListResult . getBotList ()); }); } }, 1 , 5 , TimeUnit . MINUTES ); } To disable posting to Bot list, either set the bot into beta mode through the config.json or put everything after this if and before the }, 1, 5, TimeUnit.MINUTES); into comments. You can also update the BotList enum in the HttpUtil,java to post to different bot lists.","title":"Make changes to code"},{"location":"bot/selfhosting/#update-classes","text":"You need to update values in specific classes to make your version work without issues. Namely you have to alter the content of the following classes: IDs.java (Contains various IDs of users or Guilds) Emotes.java (Contains different emotes used in commands) Links.java (Contains various links of the bot)","title":"Update some classes"},{"location":"bot/selfhosting/#build-jar","text":"When you're done with your changes, make sure to execute gradlew clean shadowJar to build a shaded jar containing all dependnencies required.","title":"Build jar file"},{"location":"bot/selfhosting/#config","text":"The config.json is the core file of the bot in which you set various different information that will be used by the bot. On first startup will it generate with the below default values. Default Config.json { \"bot-token\" : \"TOKEN\" , \"beta\" : false , \"debug\" : false , \"webhooks\" : { \"guild\" : \"guild-webhook-url\" , \"log\" : \"log-webhook-url\" }, \"tokens\" : { \"fluxpoint-dev\" : \"fluxpoint-dev-token\" , \"discord-bots-gg\" : \"dbgg-token\" , \"botlist-space\" : \"botlist-token\" , \"discordextremelist-xyz\" : \"debl-token\" , \"discord-boats\" : \"discord-boats-token\" , \"discordservices-net\" : \"discordservices-net-token\" }, \"database\" : { \"ip\" : \"127.0.0.1\" , \"name\" : \"DatabaseName\" , \"guildTable\" : \"GuildTable\" } } Note that you don't have to set values for every option in the config.json. If you followed the previous step on preparing the bot will you only need to set the following options: Option: Value required: bot-token Valid Bot-token of your Bot-application to login. webhooks.guild A URL to a Discord webhook for logging joins and leaves of the bot. webhooks.log A URL to a Discord webhook for logging dis/reconnects of the bot. tokens.fluxpoint-dev Valid Authentication-token for the image-API of Fluxpoint.dev database.ip Domain/IP of the RethinkDB server. database.name Name of the database you created. database.guildTable Name of the table you created to store guild settings.","title":"Config.json"},{"location":"bot/selfhosting/#other-files","text":"The bot also has other files, which you can alter to your liking. random.json contains various messages and links used for (often) random responses. data.json contains data such as current guild blacklist, special users and more. Various lang-files used for the different command responses of the bot.","title":"Other files"},{"location":"bot/changelogs/changelog_v3/","text":"v3.x Changelogs \u00b6 Latest v3.x changes of *Purr*. 3.0.0 \u00b6 Commands \u00b6 Switched over to Discord's Slash commands system. This means that all commands now use / as their prefix. Updated commands: Merged eevee , holo , kitsune , neko , okami and senko into a single img command. Each of the commands has become a subcommand for img . language now has the subcommands list , set and reset . welcome now has a subcommand reset to reset one or all welcome settings. help was renamed to purrhelp emote now has the subcommands get and search . Removed commands: Removed prefix Welcome images will now be loaded asynchronosly using Java's CompletableFuture .","title":"v3.x"},{"location":"bot/changelogs/changelog_v3/#v3x-changelogs","text":"Latest v3.x changes of *Purr*.","title":"v3.x Changelogs"},{"location":"bot/changelogs/changelog_v3/#300","text":"","title":"3.0.0"},{"location":"bot/changelogs/changelog_v3/#commands","text":"Switched over to Discord's Slash commands system. This means that all commands now use / as their prefix. Updated commands: Merged eevee , holo , kitsune , neko , okami and senko into a single img command. Each of the commands has become a subcommand for img . language now has the subcommands list , set and reset . welcome now has a subcommand reset to reset one or all welcome settings. help was renamed to purrhelp emote now has the subcommands get and search . Removed commands: Removed prefix Welcome images will now be loaded asynchronosly using Java's CompletableFuture .","title":"Commands"},{"location":"bot/welcome/welcome-channel/","text":"The welcome channel allows you to greet people with a message and image when they join your Discord. Notes Before you set up the channel, make sure you have made the following checks first: You have Manage Server permission or are the owner of the Discord server. The bot has Send Messages and Attach Files permission for the channel where it should send the welcome messsages. Video Tutorial Here is a video explaining the steps below. Step 1: Set a channel \u00b6 You first need to set a channel. To do this, run /welcome channel <textchannel: channel> where <textchannel: channel> is the Text channel you want to use. Please make sure that the bot has sufficient permissions for the provided channel to work. You can reset this with /welcome reset channel Step 2: Set a background \u00b6 Now should you set a welcome background through /welcome background <string: background> where <string: background> should be the name of the background you want to use. By default is color_white used but you can set any available background you like. As a Server booster can you also set the booster background and as a Tier 2 or Tier 3 Patreon can you use any background you like . You can reset this with /welcome reset background Step 3: Set an icon \u00b6 Next step is to set an icon using /welcome icon <string: icon> where <string: icon> is the name of the icon you want to use. By default is purr used but you can set any available icon you like. As a Server booster can you also set the booster icon and as a Tier 2 or Tier 3 Patreon can you use any icon you like . You can reset this with /welcome reset icon Step 4: Set a text color \u00b6 Not every background works well with the font colour used. That's why you can also change the font colour using /welcome color <string: color> where <string: color> should be either hex:rrggbb (example: hex:ffffff ), rgb:r,g,b (example: rgb:255,255,255 ) or random . You can reset this with /welcome reset color Step 5: Set a message \u00b6 What is a welcome-system without a way to set your own message? With /welcome message <string: message> , where <string: message> is the message you want to use, can you set you set your very own message to display alongside the welcome image! You can use the below listed placeholders to display different information for each new user. You can reset this with /welcome reset message Placeholders \u00b6 Placeholder: Description: Example Output: {count} / {members} The current amount of members on the Discord server. 1000 {count_formatted} / {members_formatted} The current amount of members on the Discord server, but formatted. 1,000 {guild} / {server} The name of the server. SomeDiscord {mention} Mention of the user that joined the server. @SomeUser {name} / {username} The name of the user that joined the server. SomeUser {c_mention:<id>} A mention of the provided channel ID. Works with text and voice. #SomeChannel {c_name:<id>} The name of the provided channel ID. Works with any channel and categories. SomeChannel {r_mention:<id>} A mention of the provided role ID. @SomeRole {r_name:<id>} The name of the provided role ID. SomeRole {tag} The tag of the user that joined the server. SomeUser#1234 Final Step: Testing \u00b6 All that is left is to test your work. For that simply run /welcome test and the bot should respond with the message and image you defined shortly after.","title":"Setup"},{"location":"bot/welcome/welcome-channel/#step-1","text":"You first need to set a channel. To do this, run /welcome channel <textchannel: channel> where <textchannel: channel> is the Text channel you want to use. Please make sure that the bot has sufficient permissions for the provided channel to work. You can reset this with /welcome reset channel","title":"Step 1: Set a channel"},{"location":"bot/welcome/welcome-channel/#step-2","text":"Now should you set a welcome background through /welcome background <string: background> where <string: background> should be the name of the background you want to use. By default is color_white used but you can set any available background you like. As a Server booster can you also set the booster background and as a Tier 2 or Tier 3 Patreon can you use any background you like . You can reset this with /welcome reset background","title":"Step 2: Set a background"},{"location":"bot/welcome/welcome-channel/#step-3","text":"Next step is to set an icon using /welcome icon <string: icon> where <string: icon> is the name of the icon you want to use. By default is purr used but you can set any available icon you like. As a Server booster can you also set the booster icon and as a Tier 2 or Tier 3 Patreon can you use any icon you like . You can reset this with /welcome reset icon","title":"Step 3: Set an icon"},{"location":"bot/welcome/welcome-channel/#step-4","text":"Not every background works well with the font colour used. That's why you can also change the font colour using /welcome color <string: color> where <string: color> should be either hex:rrggbb (example: hex:ffffff ), rgb:r,g,b (example: rgb:255,255,255 ) or random . You can reset this with /welcome reset color","title":"Step 4: Set a text color"},{"location":"bot/welcome/welcome-channel/#step-5","text":"What is a welcome-system without a way to set your own message? With /welcome message <string: message> , where <string: message> is the message you want to use, can you set you set your very own message to display alongside the welcome image! You can use the below listed placeholders to display different information for each new user. You can reset this with /welcome reset message","title":"Step 5: Set a message"},{"location":"bot/welcome/welcome-channel/#placeholders","text":"Placeholder: Description: Example Output: {count} / {members} The current amount of members on the Discord server. 1000 {count_formatted} / {members_formatted} The current amount of members on the Discord server, but formatted. 1,000 {guild} / {server} The name of the server. SomeDiscord {mention} Mention of the user that joined the server. @SomeUser {name} / {username} The name of the user that joined the server. SomeUser {c_mention:<id>} A mention of the provided channel ID. Works with text and voice. #SomeChannel {c_name:<id>} The name of the provided channel ID. Works with any channel and categories. SomeChannel {r_mention:<id>} A mention of the provided role ID. @SomeRole {r_name:<id>} The name of the provided role ID. SomeRole {tag} The tag of the user that joined the server. SomeUser#1234","title":"Placeholders"},{"location":"bot/welcome/welcome-channel/#final-step","text":"All that is left is to test your work. For that simply run /welcome test and the bot should respond with the message and image you defined shortly after.","title":"Final Step: Testing"},{"location":"bot/welcome/welcome-images/","text":"*Purr* allows you to set a welcome-channel where she greets joining users with a message and an image. A tutorial on how to set this up can be found here . This page here lists all available icons and backgrounds that can be used. If you have suggestions for new backgrounds or icons, feel free to join our Discord and suggest it there. Credit \u00b6 *Purr* uses the API from Fluxpoint Development which is owned by Builderb, the creator of popular bots like Waifu and Hangman . Backgrounds \u00b6 The background is across the entire image and behind the avatar, text and icon. Booster Reward \u00b6 These backrgounds are only available as a reward for boosting the Discord Server . booster \u00b6 Background with Booster colour and icons. Colors \u00b6 Simple one color-backgrounds. color_black \u00b6 The color black. ( #000000 ) color_blue \u00b6 The color blue. ( #2980B9 ) color_blurple \u00b6 The original Blurple from before the Discord rebranding ( #7289DA ) color_green \u00b6 The color green. ( #27AE60 ) color_grey \u00b6 The color grey. ( #959595 ) color_red \u00b6 The color red. ( #C0392B ) color_white \u00b6 The color white. ( #FFFFFF ) Gradients \u00b6 Some nice gradients gradient \u00b6 A slightly blue-ish gradient. gradient_blue \u00b6 A dark-blue gradient. gradient_dark_red \u00b6 A dark-red gradient. gradient_green \u00b6 A dark_green gradient. gradient_orange \u00b6 A orange gradient. gradient_red \u00b6 A red gradient (bright red). Other \u00b6 Other available options. custom \u00b6 This is a Patreon-exclusive option. Users that support us through Patreon as a Tier 2 or Tier 3 member gain access to use any image they want by providing a URL instead of a name. The only requirements are, that the image has the right dimensions ( 2000x350 ) rainbow \u00b6 A rainbow gradient. random \u00b6 The option random picks one of the above backgrounds randomly for each new image. Icons \u00b6 Icons can be seen on the right side of the image. Booster Reward \u00b6 These icons are only available as a reward for boosting the Discord Server . booster \u00b6 Icon Wumpus on it. Nekos \u00b6 Neko related icons. neko_hug \u00b6 Shows a neko hugging a human UwU neko_smile \u00b6 A smiling neko :3 purr \u00b6 *Purr* herself. >w< Created by Makay#0270 purr_old \u00b6 *Purr*'s old avatar. -w- snuggle \u00b6 *Purr*'s younger sister *Snuggle*. OwO snuggle_lurk \u00b6 *Snuggle* lurking at you... Created by Makay#0270 Sewayaki Kitsune no Senko-san \u00b6 Characters from the anime \"Sewayaki Kitsune no Senko-san\" Senko \u00b6 The main female character of the anime. Shiro \u00b6 The second female character of the anime. Spice & Wolf \u00b6 Characters from the anime \"Spice & Wolf\". holo \u00b6 The main character holo. Other \u00b6 Other available options. custom \u00b6 This is a Patreon-exclusive option. Users that support us through Patreon as a Tier 2 or Tier 3 member gain access to use any image they want by providing a URL instead of a name. The only requirements are, that the image has the right dimensions ( 320x320 ) random \u00b6 The option random picks one of the above icons randomly for each new image.","title":"Images"},{"location":"bot/welcome/welcome-images/#credit","text":"*Purr* uses the API from Fluxpoint Development which is owned by Builderb, the creator of popular bots like Waifu and Hangman .","title":"Credit"},{"location":"bot/welcome/welcome-images/#backgrounds","text":"The background is across the entire image and behind the avatar, text and icon.","title":"Backgrounds"},{"location":"bot/welcome/welcome-images/#booster-reward","text":"These backrgounds are only available as a reward for boosting the Discord Server .","title":"Booster Reward"},{"location":"bot/welcome/welcome-images/#booster-background","text":"Background with Booster colour and icons.","title":"booster"},{"location":"bot/welcome/welcome-images/#colors","text":"Simple one color-backgrounds.","title":"Colors"},{"location":"bot/welcome/welcome-images/#color_black","text":"The color black. ( #000000 )","title":"color_black"},{"location":"bot/welcome/welcome-images/#color_blue","text":"The color blue. ( #2980B9 )","title":"color_blue"},{"location":"bot/welcome/welcome-images/#color_blurple","text":"The original Blurple from before the Discord rebranding ( #7289DA )","title":"color_blurple"},{"location":"bot/welcome/welcome-images/#color_green","text":"The color green. ( #27AE60 )","title":"color_green"},{"location":"bot/welcome/welcome-images/#color_grey","text":"The color grey. ( #959595 )","title":"color_grey"},{"location":"bot/welcome/welcome-images/#color_red","text":"The color red. ( #C0392B )","title":"color_red"},{"location":"bot/welcome/welcome-images/#color_white","text":"The color white. ( #FFFFFF )","title":"color_white"},{"location":"bot/welcome/welcome-images/#gradients","text":"Some nice gradients","title":"Gradients"},{"location":"bot/welcome/welcome-images/#gradient","text":"A slightly blue-ish gradient.","title":"gradient"},{"location":"bot/welcome/welcome-images/#gradient_blue","text":"A dark-blue gradient.","title":"gradient_blue"},{"location":"bot/welcome/welcome-images/#gradient_dark_red","text":"A dark-red gradient.","title":"gradient_dark_red"},{"location":"bot/welcome/welcome-images/#gradient_green","text":"A dark_green gradient.","title":"gradient_green"},{"location":"bot/welcome/welcome-images/#gradient_orange","text":"A orange gradient.","title":"gradient_orange"},{"location":"bot/welcome/welcome-images/#gradient_red","text":"A red gradient (bright red).","title":"gradient_red"},{"location":"bot/welcome/welcome-images/#other-backgrounds","text":"Other available options.","title":"Other"},{"location":"bot/welcome/welcome-images/#custom-background","text":"This is a Patreon-exclusive option. Users that support us through Patreon as a Tier 2 or Tier 3 member gain access to use any image they want by providing a URL instead of a name. The only requirements are, that the image has the right dimensions ( 2000x350 )","title":"custom"},{"location":"bot/welcome/welcome-images/#rainbow","text":"A rainbow gradient.","title":"rainbow"},{"location":"bot/welcome/welcome-images/#random","text":"The option random picks one of the above backgrounds randomly for each new image.","title":"random"},{"location":"bot/welcome/welcome-images/#icons","text":"Icons can be seen on the right side of the image.","title":"Icons"},{"location":"bot/welcome/welcome-images/#booster-reward_1","text":"These icons are only available as a reward for boosting the Discord Server .","title":"Booster Reward"},{"location":"bot/welcome/welcome-images/#booster-icon","text":"Icon Wumpus on it.","title":"booster"},{"location":"bot/welcome/welcome-images/#nekos","text":"Neko related icons.","title":"Nekos"},{"location":"bot/welcome/welcome-images/#neko_hug","text":"Shows a neko hugging a human UwU","title":"neko_hug"},{"location":"bot/welcome/welcome-images/#neko_smile","text":"A smiling neko :3","title":"neko_smile"},{"location":"bot/welcome/welcome-images/#purr","text":"*Purr* herself. >w< Created by Makay#0270","title":"purr"},{"location":"bot/welcome/welcome-images/#purr_old","text":"*Purr*'s old avatar. -w-","title":"purr_old"},{"location":"bot/welcome/welcome-images/#snuggle","text":"*Purr*'s younger sister *Snuggle*. OwO","title":"snuggle"},{"location":"bot/welcome/welcome-images/#snuggle_lurk","text":"*Snuggle* lurking at you... Created by Makay#0270","title":"snuggle_lurk"},{"location":"bot/welcome/welcome-images/#senko-san","text":"Characters from the anime \"Sewayaki Kitsune no Senko-san\"","title":"Sewayaki Kitsune no Senko-san"},{"location":"bot/welcome/welcome-images/#senko","text":"The main female character of the anime.","title":"Senko"},{"location":"bot/welcome/welcome-images/#shiro","text":"The second female character of the anime.","title":"Shiro"},{"location":"bot/welcome/welcome-images/#spice-and-wolf","text":"Characters from the anime \"Spice & Wolf\".","title":"Spice &amp; Wolf"},{"location":"bot/welcome/welcome-images/#holo","text":"The main character holo.","title":"holo"},{"location":"bot/welcome/welcome-images/#other-icons","text":"Other available options.","title":"Other"},{"location":"bot/welcome/welcome-images/#custom-icon","text":"This is a Patreon-exclusive option. Users that support us through Patreon as a Tier 2 or Tier 3 member gain access to use any image they want by providing a URL instead of a name. The only requirements are, that the image has the right dimensions ( 320x320 )","title":"custom"},{"location":"bot/welcome/welcome-images/#random_1","text":"The option random picks one of the above icons randomly for each new image.","title":"random"},{"location":"contribute/","text":"Contribute towards the Projects \u00b6 We're always happy for people who want to help us improve our various projects. But before you blindly dive into the stuff, keep the following things in mind. Documentation/Wiki \u00b6 The documentation (The site you're currently on) is located here and we're happy over every improvement made, being it the addition of missing information, fixing style-issues or even just correcting minor typos. Before you start, make sure you've read the formatting help page to know everything important about the styling of the docs. Also, make sure to read the CONTRIBUTING.md file for important points about the Documentation's styling. Bot \u00b6 I (Andre_601) are not the best developer, so there are sure some problematic Coding decision made in the code of *Purr* . That's why I'm always happy to receive Pull requests to improve and fix things. Please make sure to follow the contributing guidelines for the repository. API \u00b6 Similar to the bot is the API not the best in terms of code. Feel free to submit any Pull requests to improve it. You can find the source codes here . Translations \u00b6 We welcome every kind of translation. This even includes those that don't really exist (Are a joke-language like Klingon... No hate towards those guys). To become a translator, read how to on the translations page and join our Discord , so that he can add you as a translator to the Translation page .","title":"Contribute"},{"location":"contribute/#contribute-towards-the-projects","text":"We're always happy for people who want to help us improve our various projects. But before you blindly dive into the stuff, keep the following things in mind.","title":"Contribute towards the Projects"},{"location":"contribute/#documentationwiki","text":"The documentation (The site you're currently on) is located here and we're happy over every improvement made, being it the addition of missing information, fixing style-issues or even just correcting minor typos. Before you start, make sure you've read the formatting help page to know everything important about the styling of the docs. Also, make sure to read the CONTRIBUTING.md file for important points about the Documentation's styling.","title":"Documentation/Wiki"},{"location":"contribute/#bot","text":"I (Andre_601) are not the best developer, so there are sure some problematic Coding decision made in the code of *Purr* . That's why I'm always happy to receive Pull requests to improve and fix things. Please make sure to follow the contributing guidelines for the repository.","title":"Bot"},{"location":"contribute/#api","text":"Similar to the bot is the API not the best in terms of code. Feel free to submit any Pull requests to improve it. You can find the source codes here .","title":"API"},{"location":"contribute/#translations","text":"We welcome every kind of translation. This even includes those that don't really exist (Are a joke-language like Klingon... No hate towards those guys). To become a translator, read how to on the translations page and join our Discord , so that he can add you as a translator to the Translation page .","title":"Translations"},{"location":"contribute/formatting-help/","text":"Formatting Help \u00b6 This page lists all the different Markdown formatting syntaxes, which are used across the documentation. Please not that not all Styles are available for the default Markdown shipped with MkDocs and require extensions to be installed. Any extension required will be mentioned. Lists \u00b6 Unordered and ordered lists have a slightly different formatting than the one you're probably used to. In order for the list to work will they require an empty line between the list, and any displayed text above them. List example Markdown Result This list below will work. - Entry 1 - Entry 2 - Entry 3 ---- This list, however, won't work. - Entry 1 - Entry 2 - Entry 3 This list below will work. Entry 1 Entry 2 Entry 3 This list, however, won't work. - Entry 1 - Entry 2 - Entry 3 In addition to the above requirement will you also need to use 4 spaces compared to the usual 2, when you want to indent the list. Indent example Markdown Result Working indents: - Entry 1 - Entry 1.1 - Entry 2 ---- Not working indents: - Entry 1 - Entry 1.1 - Entry 2 Working indents: Entry 1 Entry 1.1 Entry 2 Not working indents: Entry 1 Entry 1.1 Entry 2 Info boxes \u00b6 You sure have noticed those neat looking boxes that contain various information of stuff. Those are provided through MkDocs and use a specific syntax, that you need to follow. Box examples Markdown Result !!! info \"Title\" Rules about Markdown still apply. - F.e. Lists - Still need an empty line ---- !!! info The title can be omited. The box will then use the name of its type. Title Rules about Markdown still apply. F.e. Lists Still need an empty line Info The title can be omited. The box will then use the name of its type. Special rules You don't need to add two spaces after the !!! <type> \"<title>\" . MkDocs can handle this just fine. You need to add at least one empty line before and after the info box to not have unwanted formatting issues. Types \u00b6 The info boxes have various types available which you can choose from: Note Summary Info Tip Success Question Warning Failure Danger Bug Example Quote Collapsable info boxes (Details) \u00b6 This feature requires the Details extension from PyMdown . Those boxes are similar to the normal info boxes, but can be collapsed (closed) or expanded (opened). They follow the same syntax as the info boxes, but use question marks ( ? ) instead of exclamation marks ( ! ). You can use the exact same types as with the info boxes. Collapsable Box example Markdown Result ??? info \"Title\" This box is closed by default ---- ???+ info \"Title\" Adding a + after the question mark makes this box open by default. Title This box is closed by default Title Adding a + after the question mark makes this box open by default. Tabs \u00b6 This feature requires the Tabbed extension from PyMdown . Adds tabbed Markdown to list content after each other. This was used here for the various Markdown examples and their results. The syntax is the same as with the info box, with the difference that it uses equal signs ( = ) instead of exclamation marks ( ! ). Additionally does it also not have a type parameter, meaning you can only set the tile itself. Tabs example Markdown Result === \"Tab 1\" You can add more tabs... === \"Tab 2\" ...by adding extra `===` . ===! \"Tab A\" Using a ! after the equal signs... === \"Tab B\" ...indicates a new set of tabs. Tab 1 Tab 2 You can add more tabs... ...by adding extra === . Tab A Tab B Using a ! after the equal signs... ...indicates a new set of tabs. Links \u00b6 We use the PyMdown extension MagicLink which allows us to automatically transform links into clickable links. This doesn't happen by default. Link example Markdown Result https://purrbot.site https://purrbot.site Additionally can we link to a repository or GitHub user by just using the format @user/repo and @user respectively. This also works with Twitter-users by prefixing the name with twitter: ( @twitter:username ) Mention examples Markdown Result @purrbot -site @purrbot -site/Docs @twitter:TruePurrBot @purrbot-site purrbot-site/Docs @TruePurrBot Emojis \u00b6 We use the Emojis extension from PyMdown to allow the usage of emojis through the common :emoji: pattern. We also use the MkDocs-Material Extension which adds support for using SVG icons of FontAwesome , Material Design and Octicons in the same format. Note that unlike emojis, the custom ones added by the MkDocs-Material Extension require to be prefixed with the site they should come from. fontawesome-brands for brand icons fontawesome-regular for all regular icons fontawesome-solid for all Solid icons material for the Material Design icons octicons for the Octicons icons Note about FontAwesome and Octicons FontAwesome Octicons The MkDocs-Material Extension will only be able to use free FontAwesome icons! Paid ones aren't supported. Due to Octicons being offered in 16px and 24px format, are you required to suffix the icon name with either -16 or -24 depending on which you want to use. As an example: Instead of :octicon-repo: would you use :octicon-repo-16: or :octicon-repo-24: Emoji/Icons Examples Markdown Result Normal Emojis - :smile: - :heart: FontAwesome Icons (Brands): - :fontawesome-brands-github: - :fontawesome-brands-discord: FontAwesome Icons (Regular) - :fontawesome-regular-bell: - :fontawesome-regular-bell-slash: FontAwesome Icons (Solid) - :fontawesome-solid-bell: - :fontawesome-solid-bell-slash: Material Design: - :material-sync: - :material-alert: Octicons: - :octicons-repo-24: - :octicons-git-pull-request-24: Normal Emojis FontAwesome Icons (Brands): FontAwesome Icons (Regular) FontAwesome Icons (Solid) Material Design: Octicons: Buttons \u00b6 Using the List Attribute extension can we turn embedded Links ( [text](link) ) into buttons by appending {: .md-button } to it. Button Example Markdown Result [ To the Website ]( https://purrbot.site ){: .md-button } To the Website Final Words \u00b6 Those are all the important parts you need to know about the markdown syntax for the documentation. Anything Markdown-related that wasn't mentioned here is assumed to be the normal formatting (e.g. *italic* , **bold** , etc.).","title":"Formatting Help"},{"location":"contribute/formatting-help/#formatting-help","text":"This page lists all the different Markdown formatting syntaxes, which are used across the documentation. Please not that not all Styles are available for the default Markdown shipped with MkDocs and require extensions to be installed. Any extension required will be mentioned.","title":"Formatting Help"},{"location":"contribute/formatting-help/#lists","text":"Unordered and ordered lists have a slightly different formatting than the one you're probably used to. In order for the list to work will they require an empty line between the list, and any displayed text above them. List example Markdown Result This list below will work. - Entry 1 - Entry 2 - Entry 3 ---- This list, however, won't work. - Entry 1 - Entry 2 - Entry 3 This list below will work. Entry 1 Entry 2 Entry 3 This list, however, won't work. - Entry 1 - Entry 2 - Entry 3 In addition to the above requirement will you also need to use 4 spaces compared to the usual 2, when you want to indent the list. Indent example Markdown Result Working indents: - Entry 1 - Entry 1.1 - Entry 2 ---- Not working indents: - Entry 1 - Entry 1.1 - Entry 2 Working indents: Entry 1 Entry 1.1 Entry 2 Not working indents: Entry 1 Entry 1.1 Entry 2","title":"Lists"},{"location":"contribute/formatting-help/#info-boxes","text":"You sure have noticed those neat looking boxes that contain various information of stuff. Those are provided through MkDocs and use a specific syntax, that you need to follow. Box examples Markdown Result !!! info \"Title\" Rules about Markdown still apply. - F.e. Lists - Still need an empty line ---- !!! info The title can be omited. The box will then use the name of its type. Title Rules about Markdown still apply. F.e. Lists Still need an empty line Info The title can be omited. The box will then use the name of its type. Special rules You don't need to add two spaces after the !!! <type> \"<title>\" . MkDocs can handle this just fine. You need to add at least one empty line before and after the info box to not have unwanted formatting issues.","title":"Info boxes"},{"location":"contribute/formatting-help/#types","text":"The info boxes have various types available which you can choose from: Note Summary Info Tip Success Question Warning Failure Danger Bug Example Quote","title":"Types"},{"location":"contribute/formatting-help/#collapsable-info-boxes-details","text":"This feature requires the Details extension from PyMdown . Those boxes are similar to the normal info boxes, but can be collapsed (closed) or expanded (opened). They follow the same syntax as the info boxes, but use question marks ( ? ) instead of exclamation marks ( ! ). You can use the exact same types as with the info boxes. Collapsable Box example Markdown Result ??? info \"Title\" This box is closed by default ---- ???+ info \"Title\" Adding a + after the question mark makes this box open by default. Title This box is closed by default Title Adding a + after the question mark makes this box open by default.","title":"Collapsable info boxes (Details)"},{"location":"contribute/formatting-help/#tabs","text":"This feature requires the Tabbed extension from PyMdown . Adds tabbed Markdown to list content after each other. This was used here for the various Markdown examples and their results. The syntax is the same as with the info box, with the difference that it uses equal signs ( = ) instead of exclamation marks ( ! ). Additionally does it also not have a type parameter, meaning you can only set the tile itself. Tabs example Markdown Result === \"Tab 1\" You can add more tabs... === \"Tab 2\" ...by adding extra `===` . ===! \"Tab A\" Using a ! after the equal signs... === \"Tab B\" ...indicates a new set of tabs. Tab 1 Tab 2 You can add more tabs... ...by adding extra === . Tab A Tab B Using a ! after the equal signs... ...indicates a new set of tabs.","title":"Tabs"},{"location":"contribute/formatting-help/#links","text":"We use the PyMdown extension MagicLink which allows us to automatically transform links into clickable links. This doesn't happen by default. Link example Markdown Result https://purrbot.site https://purrbot.site Additionally can we link to a repository or GitHub user by just using the format @user/repo and @user respectively. This also works with Twitter-users by prefixing the name with twitter: ( @twitter:username ) Mention examples Markdown Result @purrbot -site @purrbot -site/Docs @twitter:TruePurrBot @purrbot-site purrbot-site/Docs @TruePurrBot","title":"Links"},{"location":"contribute/formatting-help/#emojis","text":"We use the Emojis extension from PyMdown to allow the usage of emojis through the common :emoji: pattern. We also use the MkDocs-Material Extension which adds support for using SVG icons of FontAwesome , Material Design and Octicons in the same format. Note that unlike emojis, the custom ones added by the MkDocs-Material Extension require to be prefixed with the site they should come from. fontawesome-brands for brand icons fontawesome-regular for all regular icons fontawesome-solid for all Solid icons material for the Material Design icons octicons for the Octicons icons Note about FontAwesome and Octicons FontAwesome Octicons The MkDocs-Material Extension will only be able to use free FontAwesome icons! Paid ones aren't supported. Due to Octicons being offered in 16px and 24px format, are you required to suffix the icon name with either -16 or -24 depending on which you want to use. As an example: Instead of :octicon-repo: would you use :octicon-repo-16: or :octicon-repo-24: Emoji/Icons Examples Markdown Result Normal Emojis - :smile: - :heart: FontAwesome Icons (Brands): - :fontawesome-brands-github: - :fontawesome-brands-discord: FontAwesome Icons (Regular) - :fontawesome-regular-bell: - :fontawesome-regular-bell-slash: FontAwesome Icons (Solid) - :fontawesome-solid-bell: - :fontawesome-solid-bell-slash: Material Design: - :material-sync: - :material-alert: Octicons: - :octicons-repo-24: - :octicons-git-pull-request-24: Normal Emojis FontAwesome Icons (Brands): FontAwesome Icons (Regular) FontAwesome Icons (Solid) Material Design: Octicons:","title":"Emojis"},{"location":"contribute/formatting-help/#buttons","text":"Using the List Attribute extension can we turn embedded Links ( [text](link) ) into buttons by appending {: .md-button } to it. Button Example Markdown Result [ To the Website ]( https://purrbot.site ){: .md-button } To the Website","title":"Buttons"},{"location":"contribute/formatting-help/#final-words","text":"Those are all the important parts you need to know about the markdown syntax for the documentation. Anything Markdown-related that wasn't mentioned here is assumed to be the normal formatting (e.g. *italic* , **bold** , etc.).","title":"Final Words"},{"location":"contribute/translate/","text":"Translations \u00b6 *Purr* is available in various languages. Each of those languages was made with , effort and some letters by the community. If you would like to translate the bot into a language that doesn't exist for the bot yet, or want to help improve an existing language, follow this basic guide to find out how you can do that. Step 1: Join the Discord Server \u00b6 You have to join the ~Nya Discord Server first because it is the main place for getting notified about new Strings that need to be translated. Leaving the Discord as a translator will result in you being removed from the Translation Project! Step 2: Request being added \u00b6 Once on the Discord Server should you contact Andre_601#0601 to request getting added as a Translator. Just tell him what language you want to translate. New Language If the language you want to translate doesn't exist on the project yet, will it be created by Andre and you can move on to the next step . Step 3: Join the Crowdin Project \u00b6 The translation Project is hosted on Crowdin which you can also find under the following URL: https://lang.purrbot.site Once you got added to the Discord as a Translator can you now send a request to the project to get added. You first need to either login to or create your account on Crowdin. Then select the language you want to translate the bot into. You should see a Join button with which you can send a request to get added. When everything goes well will you be added. You're done! \u00b6 Congratulations! If you followed all of the above steps are you now a translator for the bot and can start translating her messages to your language. Important notes If your language isn't translated for a longer time and without any reason from you, will it be removed from the Project and you will be removed as a translator.","title":"Translations"},{"location":"contribute/translate/#translations","text":"*Purr* is available in various languages. Each of those languages was made with , effort and some letters by the community. If you would like to translate the bot into a language that doesn't exist for the bot yet, or want to help improve an existing language, follow this basic guide to find out how you can do that.","title":"Translations"},{"location":"contribute/translate/#step-1","text":"You have to join the ~Nya Discord Server first because it is the main place for getting notified about new Strings that need to be translated. Leaving the Discord as a translator will result in you being removed from the Translation Project!","title":"Step 1: Join the Discord Server"},{"location":"contribute/translate/#step-2","text":"Once on the Discord Server should you contact Andre_601#0601 to request getting added as a Translator. Just tell him what language you want to translate. New Language If the language you want to translate doesn't exist on the project yet, will it be created by Andre and you can move on to the next step .","title":"Step 2: Request being added"},{"location":"contribute/translate/#step-3","text":"The translation Project is hosted on Crowdin which you can also find under the following URL: https://lang.purrbot.site Once you got added to the Discord as a Translator can you now send a request to the project to get added. You first need to either login to or create your account on Crowdin. Then select the language you want to translate the bot into. You should see a Join button with which you can send a request to get added. When everything goes well will you be added.","title":"Step 3: Join the Crowdin Project"},{"location":"contribute/translate/#done","text":"Congratulations! If you followed all of the above steps are you now a translator for the bot and can start translating her messages to your language. Important notes If your language isn't translated for a longer time and without any reason from you, will it be removed from the Project and you will be removed as a translator.","title":"You're done!"},{"location":"credits/","text":"This page lists different credits for all the different things used by either *Purr* or for other things on the purrbot.site GitHub organisation. Used Libraries and utilities \u00b6 Bot \u00b6 Thanks to the following people, who provide their libraries used by *Purr* Library Author License Used for Caffeine @ben-manes Apache 2.0 Caching various different information. Discord-Webhooks @MinnDevelopment Apache 2.0 Sending Webhook messages in Discord. Gson @google Apache 2.0 Parsing and (de)serialization of JSON. JDA @DV8FromTheWorld Apache 2.0 Logging into Discord and using their API. jda-command @rainestormee Apache 2.0 Adding and managing commands in Discord. RethinkDB @RethinkDB Apache 2.0 Database management. Wiki \u00b6 Thanks to the following people, providing software to make this documentation possible! Software Author Licesne Used for MkDocs @MkDocs BSD-2-Clause Building this documentation. MkDocs-Material @squidfunk MIT Theme of this documentation. PyMdown-extensions @facelessuser MIT Extensions for the documentation","title":"Index"},{"location":"credits/#used-libraries-and-utilities","text":"","title":"Used Libraries and utilities"},{"location":"credits/#bot","text":"Thanks to the following people, who provide their libraries used by *Purr* Library Author License Used for Caffeine @ben-manes Apache 2.0 Caching various different information. Discord-Webhooks @MinnDevelopment Apache 2.0 Sending Webhook messages in Discord. Gson @google Apache 2.0 Parsing and (de)serialization of JSON. JDA @DV8FromTheWorld Apache 2.0 Logging into Discord and using their API. jda-command @rainestormee Apache 2.0 Adding and managing commands in Discord. RethinkDB @RethinkDB Apache 2.0 Database management.","title":"Bot"},{"location":"credits/#wiki","text":"Thanks to the following people, providing software to make this documentation possible! Software Author Licesne Used for MkDocs @MkDocs BSD-2-Clause Building this documentation. MkDocs-Material @squidfunk MIT Theme of this documentation. PyMdown-extensions @facelessuser MIT Extensions for the documentation","title":"Wiki"},{"location":"legal/","text":"Legal \u00b6 These pages contain all the legal information that may be required to have to avoid confusion and any possible trouble. We highly recommend to read the pages in their entirety to prevent any possible missunderstandings in the future. You may find Legal pages for the following services: *Purr* - Discord Bot API - The ImageAPI used by *Purr* Website - The website located under https://purrbot.site","title":"Legal Info"},{"location":"legal/#legal","text":"These pages contain all the legal information that may be required to have to avoid confusion and any possible trouble. We highly recommend to read the pages in their entirety to prevent any possible missunderstandings in the future. You may find Legal pages for the following services: *Purr* - Discord Bot API - The ImageAPI used by *Purr* Website - The website located under https://purrbot.site","title":"Legal"},{"location":"legal/api/","text":"API \u00b6 Terms of Service \u00b6 Usage Agreement \u00b6 These Terms will apply when using the ImageAPI by either connecting to https://purrbot.site/api and all its sub-pages, using the API in your own services or by using it through the Bot *Purr*. Intended Use \u00b6 The APIs are intended to be used for software and projects mostly aimed at Discord, but may also be used on other sites and services, as long as the targeted site/service allows this. Affiliation \u00b6 The API is not affiliated with, supported or made by Discord Inc. No Trademark material from Discord Inc is used within the API. Any depicted images are the intelectual property of their respective owners and no claim of ownership of these images is done by the owner of the API. Liability \u00b6 The owner cannot be made responsible for sensitive data - as described in the Privacy Policy below - being used in malicious ways or for things outside of the APIs intended use. The user is solely responsible for the data provided and for its intendet use. We reserve the right to update these terms at our own discretion, giving you a 1-Week (7 days) period to opt out of these terms if you're not agreeing with the new changes. You may opt out by not utilizing the API as described above. Privacy Policy \u00b6 Used Information \u00b6 The API may use sensitive information such as username, nickname, avatar or content of a message to provide core functionalities. These information will only be used when provided by an end user directly. Stored Information \u00b6 No sensitive information - As described in Discord's Developer Terms of Service - is stored. The APIs may log anonymous information, such as performed requests, type of request, time of execution and towards which endpoint. This information cannot be traced back to any individual and is not shared with any 3rd-party site or service.","title":"API"},{"location":"legal/api/#api","text":"","title":"API"},{"location":"legal/api/#terms-of-service","text":"","title":"Terms of Service"},{"location":"legal/api/#usage-agreement","text":"These Terms will apply when using the ImageAPI by either connecting to https://purrbot.site/api and all its sub-pages, using the API in your own services or by using it through the Bot *Purr*.","title":"Usage Agreement"},{"location":"legal/api/#intended-use","text":"The APIs are intended to be used for software and projects mostly aimed at Discord, but may also be used on other sites and services, as long as the targeted site/service allows this.","title":"Intended Use"},{"location":"legal/api/#affiliation","text":"The API is not affiliated with, supported or made by Discord Inc. No Trademark material from Discord Inc is used within the API. Any depicted images are the intelectual property of their respective owners and no claim of ownership of these images is done by the owner of the API.","title":"Affiliation"},{"location":"legal/api/#liability","text":"The owner cannot be made responsible for sensitive data - as described in the Privacy Policy below - being used in malicious ways or for things outside of the APIs intended use. The user is solely responsible for the data provided and for its intendet use. We reserve the right to update these terms at our own discretion, giving you a 1-Week (7 days) period to opt out of these terms if you're not agreeing with the new changes. You may opt out by not utilizing the API as described above.","title":"Liability"},{"location":"legal/api/#privacy-policy","text":"","title":"Privacy Policy"},{"location":"legal/api/#used-information","text":"The API may use sensitive information such as username, nickname, avatar or content of a message to provide core functionalities. These information will only be used when provided by an end user directly.","title":"Used Information"},{"location":"legal/api/#stored-information","text":"No sensitive information - As described in Discord's Developer Terms of Service - is stored. The APIs may log anonymous information, such as performed requests, type of request, time of execution and towards which endpoint. This information cannot be traced back to any individual and is not shared with any 3rd-party site or service.","title":"Stored Information"},{"location":"legal/bot/","text":"Bot \u00b6 Terms of Service \u00b6 Usage Agreement \u00b6 By inviting the bot and using its features (commands, welcome system) are you agreeing to the below mentioned Terms and Privacy Policy (Policy) of the bot. You acknowledge that you have the priviledge to use the bot freely on any Discord Server (Server) you share with it, that you can invite it to any Server that you have \"Manage Server\" rights for and that this priviledge might get revoked for you, if you're subject of breaking the terms and/or policy of this bot, or the Terms of Service , Privacy Policy and/or Community Guidelines of Discord Inc . Through Inviting the bot may it collect specific data as described in its Policy . The intended usage of this data is for core functionalities of the bot such as command handling, guild-specific settings and the Welcoming System. Intended Age \u00b6 The bot may not be used by individuals under the minimal age described in Discord's Terms of Service. Features, such as commands which are marked as \"NSFW\" (Not safe for work) may not be used by individuals under the age of maturity in their country. Doing so will be seen as a violation of these terms and will result in a removal of the bot from any servers you own. Affiliation \u00b6 The Bot is not affiliated with, supported or made by Discord Inc. Any direct connection to Discord or any of its Trademark objects is purely coincidental. We do not claim to have the copyright ownership of any of Discord's assets, trademarks or other intellectual property. Liability \u00b6 The owner of the bot may not be made liable for individuals breaking these Terms at any given time. He has faith in the end users being truthfull about their information and not missusing this bot or The Services of Discord Inc in a malicious way. We reserve the right to update these terms at our own discretion, giving you a 1-Week (7 days) period to opt out of these terms if you're not agreeing with the new changes. You may opt out by Removing the bot from any Server you have the rights for. Contact \u00b6 People may get in contact through e-mail at support@purrbot.site , or through the official Support Discord of the Bot. Other ways of support may be provided but aren't guaranteed. Privacy Policy \u00b6 Usage of Data \u00b6 The bot may use stored data, as defined below, for different features including but not limited to: Welcoming joining users (when enabled) and command handling. No usage of data outside of the aformentioned cases will happen and the data is not shared with any 3rd-party site or service. Stored Information \u00b6 The bot may store the following information automatically when being invited to a new Discord Server: id with the Server's ID as value. language with value en prefix with value p. welcome_background with value color_white welcome_channel with value none welcome_color with value hex:000000 welcome_icon with value purr welcome_message with value Welcome {mention}! No other information outside of the above mentioned one will be stored. Updating Data \u00b6 The data may be updated when using specific commands. Updating data will require the input of an end user, and data that can be seen as sensitive, such as content of a message, may need to be stored when using certain commands. No other actions may update the stored information at any given time. Temporarely stored Information \u00b6 The Bot may keep the stored information in an internal cacheing mechanic for a certain amount of time. After this time period, the cached information will be dropped and only be re-added when required. Data may be dropped from cache pre-maturely through actions such as removing the bot from the Server. Removal of Data \u00b6 Automatic removal \u00b6 Stored Data can be removed automatically through means of removing the bot from a Server. This can be achieved by either kicking or banning the bot from the server. Re-inviting the bot will add the same default values, as mentioned above, back to the bot's database. Manual removal \u00b6 Manual removal of the data can be requested through email at support@purrbot.site . For security reasons will we ask you to provide us with proof of ownership of the server, that you wish the data to be removed of. Only a server owner may request manual removal of data and requesting it will result in the bot being removed from the server, if still present on it. Technical limitations The automatic removal of data has certain limitations that we cannot fix or avoid. Limitations include, but aren't limited to, downtime of the bot due to maintenance or technical issues at our hosting provider or Discord Inc. In such events can you request manual removal through email under the above mentioned conditions.","title":"Bot"},{"location":"legal/bot/#bot","text":"","title":"Bot"},{"location":"legal/bot/#terms-of-service","text":"","title":"Terms of Service"},{"location":"legal/bot/#usage-agreement","text":"By inviting the bot and using its features (commands, welcome system) are you agreeing to the below mentioned Terms and Privacy Policy (Policy) of the bot. You acknowledge that you have the priviledge to use the bot freely on any Discord Server (Server) you share with it, that you can invite it to any Server that you have \"Manage Server\" rights for and that this priviledge might get revoked for you, if you're subject of breaking the terms and/or policy of this bot, or the Terms of Service , Privacy Policy and/or Community Guidelines of Discord Inc . Through Inviting the bot may it collect specific data as described in its Policy . The intended usage of this data is for core functionalities of the bot such as command handling, guild-specific settings and the Welcoming System.","title":"Usage Agreement"},{"location":"legal/bot/#intended-age","text":"The bot may not be used by individuals under the minimal age described in Discord's Terms of Service. Features, such as commands which are marked as \"NSFW\" (Not safe for work) may not be used by individuals under the age of maturity in their country. Doing so will be seen as a violation of these terms and will result in a removal of the bot from any servers you own.","title":"Intended Age"},{"location":"legal/bot/#affiliation","text":"The Bot is not affiliated with, supported or made by Discord Inc. Any direct connection to Discord or any of its Trademark objects is purely coincidental. We do not claim to have the copyright ownership of any of Discord's assets, trademarks or other intellectual property.","title":"Affiliation"},{"location":"legal/bot/#liability","text":"The owner of the bot may not be made liable for individuals breaking these Terms at any given time. He has faith in the end users being truthfull about their information and not missusing this bot or The Services of Discord Inc in a malicious way. We reserve the right to update these terms at our own discretion, giving you a 1-Week (7 days) period to opt out of these terms if you're not agreeing with the new changes. You may opt out by Removing the bot from any Server you have the rights for.","title":"Liability"},{"location":"legal/bot/#contact","text":"People may get in contact through e-mail at support@purrbot.site , or through the official Support Discord of the Bot. Other ways of support may be provided but aren't guaranteed.","title":"Contact"},{"location":"legal/bot/#privacy-policy","text":"","title":"Privacy Policy"},{"location":"legal/bot/#usage-of-data","text":"The bot may use stored data, as defined below, for different features including but not limited to: Welcoming joining users (when enabled) and command handling. No usage of data outside of the aformentioned cases will happen and the data is not shared with any 3rd-party site or service.","title":"Usage of Data"},{"location":"legal/bot/#stored-information","text":"The bot may store the following information automatically when being invited to a new Discord Server: id with the Server's ID as value. language with value en prefix with value p. welcome_background with value color_white welcome_channel with value none welcome_color with value hex:000000 welcome_icon with value purr welcome_message with value Welcome {mention}! No other information outside of the above mentioned one will be stored.","title":"Stored Information"},{"location":"legal/bot/#updating-data","text":"The data may be updated when using specific commands. Updating data will require the input of an end user, and data that can be seen as sensitive, such as content of a message, may need to be stored when using certain commands. No other actions may update the stored information at any given time.","title":"Updating Data"},{"location":"legal/bot/#temporarely-stored-information","text":"The Bot may keep the stored information in an internal cacheing mechanic for a certain amount of time. After this time period, the cached information will be dropped and only be re-added when required. Data may be dropped from cache pre-maturely through actions such as removing the bot from the Server.","title":"Temporarely stored Information"},{"location":"legal/bot/#removal-of-data","text":"","title":"Removal of Data"},{"location":"legal/bot/#automatic-removal","text":"Stored Data can be removed automatically through means of removing the bot from a Server. This can be achieved by either kicking or banning the bot from the server. Re-inviting the bot will add the same default values, as mentioned above, back to the bot's database.","title":"Automatic removal"},{"location":"legal/bot/#manual-removal","text":"Manual removal of the data can be requested through email at support@purrbot.site . For security reasons will we ask you to provide us with proof of ownership of the server, that you wish the data to be removed of. Only a server owner may request manual removal of data and requesting it will result in the bot being removed from the server, if still present on it. Technical limitations The automatic removal of data has certain limitations that we cannot fix or avoid. Limitations include, but aren't limited to, downtime of the bot due to maintenance or technical issues at our hosting provider or Discord Inc. In such events can you request manual removal through email under the above mentioned conditions.","title":"Manual removal"},{"location":"legal/website/","text":"Website \u00b6 Affiliations \u00b6 The Website is not affiliated, supported or made by Discord. The website design was originally created by Maxee and altered by Andre_601 with his permission. All copyright of used images, icons, symbols or other kinds of graphics belong to their respective copyright owners. Usage of cookies \u00b6 The website may use so called Cookies. These are small text files that are saved in your browser and contain specific information to allow the faster and easier loading of the site on repeated visits. The cookies are created and handles by CloudFlare and WidgetBot . Please refer to their respective Cookie-Policies for more information. You may disable the collection and storage of these cookies permanently in your Browser-Settings. Consider however the possible negative impact such as slower loading speed and decrease of the overall experience on the site. You may allow the temporary creation and usage of cookies by opening the Site in an Private Browser Window (Also known as Incognito Mode). After closing any Private Browser Windows will the stored cookies be deleted. Please refer to your browser's manual for more information.","title":"Website"},{"location":"legal/website/#website","text":"","title":"Website"},{"location":"legal/website/#affiliations","text":"The Website is not affiliated, supported or made by Discord. The website design was originally created by Maxee and altered by Andre_601 with his permission. All copyright of used images, icons, symbols or other kinds of graphics belong to their respective copyright owners.","title":"Affiliations"},{"location":"legal/website/#usage-of-cookies","text":"The website may use so called Cookies. These are small text files that are saved in your browser and contain specific information to allow the faster and easier loading of the site on repeated visits. The cookies are created and handles by CloudFlare and WidgetBot . Please refer to their respective Cookie-Policies for more information. You may disable the collection and storage of these cookies permanently in your Browser-Settings. Consider however the possible negative impact such as slower loading speed and decrease of the overall experience on the site. You may allow the temporary creation and usage of cookies by opening the Site in an Private Browser Window (Also known as Incognito Mode). After closing any Private Browser Windows will the stored cookies be deleted. Please refer to your browser's manual for more information.","title":"Usage of cookies"}]}